// input is an arbitrary number of arrays
// returns a single array generated by alternating appending elements from the passed in args
// if one array is shorter, pad result w/ empty elements
// 

// function interleave(...arrs) {
//     let outerArray = [...arrs];
//     let arrayLength = 0;
//     let largestArrayLength = 0;
//     let interArray = []
//     for(let array of outerArray) {
//         arrayLength = array.length;
//         // console.log(arrayLength)
//         if( arrayLength > largestArrayLength) {
//             largestArrayLength = arrayLength;
//         }
//     }
//     for( let i = 0; i < largestArrayLength; i++ ) {
//         outerArray.forEach( array => {
//             if(array[i]) {
//                 interArray.push(array[i]);
//             } else interArray.push(null);
//         } )
//     }
//     return interArray;
// }

// interleave([])

// const interLeave = (...a) => {
//     let interleaved = []
//     const longest = a.reduce((a, b) => (a.length > b.length ? a : b));
  
//     for (let i in longest) {
//       a.forEach(word => word[i] === undefined ? interleaved.push(null) : interleaved.push(word[i]));
//     }
//     console.log(interleaved)
//   };

// interLeave([[1, 2, 3], [7, 8, 9, 7],[4, 5, 6]]);

function interLeave (...args) {
    const n = Math.min(...args.map(arg => arg.length))
    console.log(n)
}
interLeave([[1, 2, 3, 4, 5], [7, 8, 9, 4, 5],[4, 5, 6, 4, 5]]);